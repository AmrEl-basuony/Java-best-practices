/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serverside;

import java.io.*; 
import java.net.*; 
import java.util.Scanner; 
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author ELAF
 */
public class ClientSide extends javax.swing.JFrame {
    
    Thread readMessage = new Thread(new Runnable()  
        { 
            @Override
            public void run() { 
                new ClientSide().setVisible(true);
                while(true){
                    try{
                        Socket s = new Socket("localhost", 5005); 
                        DataInputStream dis = new DataInputStream(s.getInputStream());
                        while (true) { 
                            try { 
                                // read the message sent to this client 
                                String msg = dis.readUTF(); 
                                textArea1.append(msg);
                            } catch (IOException e) { 

                                e.printStackTrace(); 
                            } 
                        }

                    }catch(UnknownHostException ex) {
                        ex.printStackTrace();
                    } catch (IOException ex) {
                        Logger.getLogger(ClientSide.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } 
        });
    
    /**
     * Creates new form ClientSide
     */
    public ClientSide() {
        initComponents();
        try{
            Socket s = new Socket("localhost", 5005); 
            DataInputStream dis = new DataInputStream(s.getInputStream()); 
            while (true) { 
                try { 
                    // read the message sent to this client 
                    String msg = dis.readUTF(); 
                    textArea1.append(msg);
                } catch (IOException e) { 

                    e.printStackTrace(); 
                } 
            } 
        }catch(UnknownHostException e){
            e.printStackTrace();
        } catch (IOException ex) {   
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        textArea1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        textArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textArea1.setColumns(20);
        textArea1.setRows(5);
        jScrollPane3.setViewportView(textArea1);

        textArea2.setColumns(20);
        textArea2.setRows(5);
        jScrollPane4.setViewportView(textArea2);

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // read the message to deliver.   
            try { 
                Socket s = new Socket("localhost", 5005);
                DataOutputStream dos = new DataOutputStream(s.getOutputStream());
                dos.writeUTF(textArea2.getText()); 
                textArea1.append("\n"+textArea2.getText());
            } catch (IOException e) { 
                e.printStackTrace(); 
            }
            textArea2.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws UnknownHostException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
             
//        Scanner scn = new Scanner(System.in); 
//          
//        // getting localhost ip 
//        InetAddress ip = InetAddress.getByName("localhost"); 
//          
//        // establish the connection 
//        Socket s = new Socket(ip, 5005); 
          
        // obtaining input and out streams 
//        DataInputStream dis = new DataInputStream(s.getInputStream()); 
//        DataOutputStream dos = new DataOutputStream(s.getOutputStream()); 
  
        // sendMessage thread 
//        Thread sendMessage = new Thread(new Runnable(){ 
//            @Override
//            public void run() { 
////                while (true) { 
////  
////                    // read the message to deliver. 
////                    String msg = scn.nextLine(); 
////                      
////                    try { 
////                        // write on the output stream 
////                        dos.writeUTF(msg); 
////                    } catch (IOException e) { 
////                        e.printStackTrace(); 
////                    } 
////                } 
////            } 
////        }); 
          
        // readMessage thread 
//        Thread readMessage = new Thread(new Runnable()  
//        { 
//            @Override
//            public void run() { 
//  
//                while (true) { 
//                    try { 
//                        // read the message sent to this client 
//                        String msg = dis.readUTF(); 
//                        textArea1.append(msg);
//                    } catch (IOException e) { 
//  
//                        e.printStackTrace(); 
//                    } 
//                } 
//            } 
//        }); 
  
//        sendMessage.start(); 
//        readMessage.start(); 
  
    
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientSide().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea textArea1;
    private javax.swing.JTextArea textArea2;
    // End of variables declaration//GEN-END:variables
}
